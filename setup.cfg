[metadata]
name = scheduler-tools
description = Basic tools for automating some PBS work. In progress, and potentially unsafe.
author = William Beardall
license = MIT
license_file = LICENSE
platforms = unix, linux, osx, cygwin, win32
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11

[options]
packages =
    schedtools
install_requires =
    apscheduler
    paramiko
    python-daemon
    requests
    rich
    setuptools>=42.0
    systemd-python
    wheel

python_requires = >=3.5
package_dir =
    = src
zip_safe = no

[options.entry_points]
console_scripts =
    check-status= schedtools.check_status:check_status
    convert-jobscripts = schedtools.convert_jobscripts:convert_jobscripts
    delete-duplicate-jobs = schedtools.delete_duplicate_jobs:delete_duplicate_jobs
    schedtools-help = schedtools.help:help
    create-smtp-credentials = schedtools.smtp:create_credentials
    remote-command = schedtools.remote_command:remote_command
    remove-service = schedtools.remove_service:remove_service
    rerun = schedtools.rerun:rerun
    storage-tracker = schedtools.storage_tracker:storage_tracker

[options.extras_require]

docs =
    sphinx>=4.0, <5.0
    myst-parser
    nbsphinx>=0.8
    pandoc>=1.0
    docutils>=0.16
    sphinxcontrib-fulltoc>=1.0
    sphinxcontrib-mockautodoc
    sphinx-autodoc-typehints>=1.0
    sphinx-paramlinks>=0.5.1
    sphinx-togglebutton>=0.2
    sphinx-copybutton>=0.3

testing =
    genbadge[coverage,tests]>=1.1.0
    packaging>=21.3
    pre-commit
    pytest>=6.0
    pytest-cov>=2.0


[options.package_data]
tsk = py.typed

[options.packages.find]
where=src

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstract(static)?method

[flake8]
max-line-length = 88

[docformatter]
recursive = true
in-place = true
wrap-summaries = 82
blank = true
syntax = google
